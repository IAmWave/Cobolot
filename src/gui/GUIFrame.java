/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import gui.tabs.ExampleTabPanel;
import gui.tabs.SinglePastaTabPanel;
import gui.tabs.GraphTabPanel;
import input.ChatListener;
import input.ChatReader;
import input.Message;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.text.AttributeSet;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyleContext;

/**
 *
 * @author VÃ¡clav
 */
public class GUIFrame extends javax.swing.JFrame implements ChatListener {

    /**
     * Creates new form GUIFrame
     */
    ChatReader chatReader;

    public GUIFrame(ChatReader cr) {
        chatReader = cr;
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code">
        try {
            javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
        } catch (Exception ex) {
            Logger.getLogger(GUIFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>
        initComponents();
        sendTextField.addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {

            }

            @Override
            public void keyPressed(KeyEvent e) {
            }

            @Override
            public void keyReleased(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    sendMessage();
                }
            }
        });
        ExampleTabPanel etp = new ExampleTabPanel(cr, "Kappa");
        tabbedPane.addTab("Kappa counter", etp);
        SinglePastaTabPanel sP = new SinglePastaTabPanel(cr);
        tabbedPane.addTab("Single pasta", sP);
        GraphTabPanel graph = new GraphTabPanel(cr, 10);
        tabbedPane.addTab("Graphs", graph);

        setLocationRelativeTo(null);
        cr.addListener(this);
        cr.start();
        cr.joinChannel("nl_kripp");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        chatPane = new javax.swing.JTextPane();
        tabbedPane = new javax.swing.JTabbedPane();
        sendTextField = new javax.swing.JTextField();
        sendButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(chatPane);

        sendButton.setText("Send");
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(tabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(sendTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sendButton))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPane)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sendTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sendButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        sendMessage();
    }//GEN-LAST:event_sendButtonActionPerformed

    private void sendMessage() {
        if(!sendTextField.getText().equals("")){
        chatReader.sendMessage(sendTextField.getText(), chatReader.currentChannels.get(0));
        sendTextField.setText("");}
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane chatPane;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton sendButton;
    private javax.swing.JTextField sendTextField;
    private javax.swing.JTabbedPane tabbedPane;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onMessage(Message message) {
        Color c = Color.BLACK;
        StyleContext sc = StyleContext.getDefaultStyleContext();
        AttributeSet aset = sc.addAttribute(SimpleAttributeSet.EMPTY, StyleConstants.Foreground, c);
        int len = chatPane.getDocument().getLength(); // same value as getText().length();
        chatPane.setCaretPosition(len);  // place caret at the end (with no selection)
        chatPane.setCharacterAttributes(aset, false);
        if (chatPane.getText().equals("")) {
            chatPane.replaceSelection(message.getMsg()); // there is no selection, so inserts at caret
        } else {
            chatPane.replaceSelection("\n" + message.getMsg()); // there is no selection, so inserts at caret
        }
        chatPane.setCaretPosition(chatPane.getDocument().getLength() - message.getMsg().length());
        repaint(); //Repaintuje taby
    }

    @Override
    public void onUserMessage(Message message) {
        Color c = Color.RED;
        StyleContext sc = StyleContext.getDefaultStyleContext();
        AttributeSet aset = sc.addAttribute(SimpleAttributeSet.EMPTY, StyleConstants.Foreground, c);
        int len = chatPane.getDocument().getLength(); // same value as getText().length();
        chatPane.setCaretPosition(len);  // place caret at the end (with no selection)
        chatPane.setCharacterAttributes(aset, false);
        if (chatPane.getText().equals("")) {
            chatPane.replaceSelection(message.getMsg()); // there is no selection, so inserts at caret
        } else {
            chatPane.replaceSelection("\n" + message.getMsg()); // there is no selection, so inserts at caret
        }
        chatPane.setCaretPosition(chatPane.getDocument().getLength() - message.getMsg().length());
        repaint(); //Repaintuje taby
    }
}
